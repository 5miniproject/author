server:
  port: 8080

spring:
  application:
    name: library
---

spring:
  profiles: default
  # >>>> h2 데이터 베이스 설정
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:~/mini5-library
    username: sa
    password: 1234
  h2:
    console:
      enabled: true
      path: /h2-console
  # <<<< h2 데이터 베이스 설정    
  jpa:
    properties:
      hibernate:
        ddl-auto: update # 스키마 생성 전략
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: library
#<<< EDA / Topic Name
          destination: aivlelibraryminiproj
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: aivlelibraryminiproj
#>>> EDA / Topic Name
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8086

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: library
          destination: aivlelibraryminiproj
          contentType: application/json
        event-out:
          destination: aivlelibraryminiproj
          contentType: application/json


