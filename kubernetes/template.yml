---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: author
  labels:
    app: author
spec:
  replicas: 1
  selector:
    matchLabels:
      app: author
  template:
    metadata:
      labels:
        app: author
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: author
          image: "a0018.azurecr.io/author:latest"
          ports:
            - containerPort: 8080
          env:
            - name: _DATASOURCE_ADDRESS
              value: mysql-service
            - name: _DATASOURCE_ADDRESS
              value: author_db
            - name: _DATASOURCE_USERNAME
              value: root
            - name: MYSQL_ROOT_PASSWORD # application.yml에서 참조하는 환경 변수 이름
              valueFrom:
                secretKeyRef:
                  name: mysql-pass # MySQL 비밀번호가 저장된 Secret 이름
                  key: password    # Secret 내의 키
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: subscribe
  labels:
    app: subscribe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: subscribe
  template:
    metadata:
      labels:
        app: subscribe
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: subscribe
          image: "a0018.azurecr.io/subscribe:latest"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: azure-volume
              mountPath: /files
      volumes:
        - name: azure-volume
          persistentVolumeClaim:
            claimName: azurefile

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: gateway
          image: "a0018.azurecr.io/gateway:latest"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: azure-volume
              mountPath: /files
      volumes:
        - name: azure-volume
          persistentVolumeClaim:
            claimName: azurefile

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: frontend
          image: "a0018.azurecr.io/frontend:latest"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: azure-volume
              mountPath: /files
      volumes:
        - name: azure-volume
          persistentVolumeClaim:
            claimName: azurefile

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: point
  labels:
    app: point
spec:
  replicas: 1
  selector:
    matchLabels:
      app: point
  template:
    metadata:
      labels:
        app: point
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: point
          image: "a0018.azurecr.io/point:latest"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: azure-volume
              mountPath: /files
      volumes:
        - name: azure-volume
          persistentVolumeClaim:
            claimName: azurefile

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: script
  labels:
    app: script
spec:
  replicas: 1
  selector:
    matchLabels:
      app: script
  template:
    metadata:
      labels:
        app: script
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: script
          image: "a0018.azurecr.io/script:latest"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: azure-volume
              mountPath: /files
      volumes:
        - name: azure-volume
          persistentVolumeClaim:
            claimName: azurefile

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: library
  labels:
    app: library
spec:
  replicas: 1
  selector:
    matchLabels:
      app: library
  template:
    metadata:
      labels:
        app: library
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: library
          image: "a0018.azurecr.io/library:latest"
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: azure-volume
              mountPath: /files
      volumes:
        - name: azure-volume
          persistentVolumeClaim:
            claimName: azurefile

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: serviceai
  labels:
    app: serviceai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: serviceai
  template:
    metadata:
      labels:
        app: serviceai
        sidecar.istio.io/inject: "true"
    spec:
      containers:
        - name: serviceai
          image: a0018.azurecr.io/serviceai:latest
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: '/actuator/health'
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 5
          env:
           - name: OPENAI_API_KEY
             valueFrom:
              secretKeyRef:
                  name: service-secrets
                  key: OPENAI_API_KEY
          volumeMounts:
            - name: azure-volume
              mountPath: /files
      volumes:
        - name: azure-volume
          persistentVolumeClaim:
            claimName: azurefile


---


apiVersion: v1
kind: Service
metadata:
  name: author
  labels:
    app: author
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: author


---


apiVersion: v1
kind: Service
metadata:
  name: subscribe
  labels:
    app: subscribe
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: subscribe


---

apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: frontend


---


apiVersion: v1
kind: Service
metadata:
  name: gateway
  labels:
    app: gateway
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: gateway
  type: ClusterIP


---


apiVersion: v1
kind: Service
metadata:
  name: point
  labels:
    app: point
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: point


---


apiVersion: v1
kind: Service
metadata:
  name: script
  labels:
    app: script
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: script


---


apiVersion: v1
kind: Service
metadata:
  name: library
  labels:
    app: library
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: library


---


apiVersion: v1
kind: Service
metadata:
  name: serviceai
  labels:
    app: serviceai
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: serviceai